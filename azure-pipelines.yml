trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureServiceConnection: 'example-app-test1'  
  azureSubscription: $(AzureSubscriptionId)
  resourceGroup: 'example-test1'
  location: 'westus2'
  appServicePlan: 'DSafranAsp7391'
  flaskAppName: 'test-exampleapp-s3ai-version004'
  reactStorageAccount: 's3aiversion002'
  projectRoot: $(System.DefaultWorkingDirectory)
  pythonVersion: '3.12'
  environmentName: 'example_app_test_env_001'  

jobs:
- job: DeployInfrastructure
  displayName: 'Deploy Infrastructure'
  steps:
  - task: AzureCLI@2
    inputs:
      azureSubscription: $(azureServiceConnection)
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        az group create --name $(resourceGroup) --location $(location)

        # Create App Service Plan
        az appservice plan create --name $(appServicePlan) --resource-group $(resourceGroup) --sku B1 --is-linux

        # Create Flask Web App
        az webapp create --name $(flaskAppName) --resource-group $(resourceGroup) --plan $(appServicePlan) --runtime "PYTHON|3.12"

        # Set startup command for Flask App
        az webapp config set --resource-group $(resourceGroup) --name $(flaskAppName) --startup-file "gunicorn --bind=0.0.0.0 --timeout 600 server:app"

        # Create Storage Account for React App
        az storage account create --name $(reactStorageAccount) --resource-group $(resourceGroup) --location $(location) --sku Standard_LRS

- job: BuildFlaskApp
  dependsOn: DeployInfrastructure
  displayName: 'Build Flask API'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'
  - script: |
       python -m venv antenv
       source antenv/bin/activate
       python -m pip install --upgrade pip
       pip install setup
       pip install --target="./.python_packages/lib/site-packages" -r ./requirements.txt
    workingDirectory: '$(projectRoot)/src/backend'  # Updated working directory
    displayName: "Install requirements"
  - task: ArchiveFiles@2
    displayName: 'Archive files'
    inputs:
      rootFolderOrFile: '$(projectRoot)/src/backend'  # Updated root folder
      includeRootFolder: false
      archiveType: zip
      archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      replaceExistingArchive: true
  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifactName: drop
      publishLocation: 'Container'

- deployment: DeployFlaskApp
  displayName: 'Deploy Flask API to Azure Web App'
  environment: $(environmentName)
  dependsOn: BuildFlaskApp
  condition: succeeded()
  strategy:
    runOnce:
      deploy:
        steps:
        - task: UsePythonVersion@0
          inputs:
            versionSpec: '$(pythonVersion)'
          displayName: 'Use Python version'
        - task: AzureWebApp@1
          displayName: 'Deploy Azure Web App : $(flaskAppName)'
          inputs:
            azureSubscription: $(azureServiceConnection)
            appName: $(flaskAppName)
            package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip

- job: DeployReactApp
  dependsOn: DeployFlaskApp
  displayName: 'Build and Deploy React Application'
  steps:
  - checkout: self
  - script: |
      npm install
      npm run build
    displayName: 'Build React App'
    workingDirectory: 'src/frontend'
  - task: AzureCLI@2
    displayName: 'Deploy React App to Azure Storage'
    inputs:
      azureSubscription: $(azureServiceConnection)
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        az storage blob upload-batch -s "$(System.DefaultWorkingDirectory)/src/frontend/build" -d '$web' --account-name $(reactStorageAccount)
